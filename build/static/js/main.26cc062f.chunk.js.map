{"version":3,"sources":["components/footer/stateFooter.js","service/validationForm.js","components/form.jsx","components/footer/footer.jsx","app.jsx","index.js"],"names":["StateFooter","BgColor","Redes","icono","url","validationSchema","Yup","shape","name","min","max","required","Username","Email","email","Password","ConfirmPassword","oneOf","termsOfService","isValid","touched","errors","Form","react_default","a","createElement","className","formik_esm","initialValues","onSubmit","values","_ref","setSubmitting","resetForm","alert","JSON","stringify","_ref2","handleSubmit","isSubmitting","htmlFor","id","type","placeholder","msg","class","disabled","Footer","props","Social","concat","map","s","href","target","rel","App","Fragment","components_form","footer","rootElement","document","getElementById","ReactDOM","render","StrictMode","app"],"mappings":"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","file":"static/js/main.26cc062f.chunk.js","sourcesContent":["const StateFooter = {\n    BgColor: \"bg-info\",\n    Redes: [\n        {\n            icono: \"fas fa-code\",\n            url: \"https://codesandbox.io/u/Lopez089\",\n        },\n        {\n            icono: \"fas fa-laptop\",\n            url: \"https://lopez089.github.io/Portafolio_juan_2019/\",\n        },\n        {\n            icono: \"fab fa-github\",\n            url: \"https://github.com/Lopez089\",\n        },\n        {\n            icono: \"fab fa-linkedin\",\n            url: \"https://www.linkedin.com/in/juanlopezaragon/\",\n        },\n        {\n            icono: \"fab fa-stack-overflow\",\n            url: \"https://stackoverflow.com/users/12279799/juan-l-a?tab=profile\",\n        },\n        {\n            icono: \"fab fa-facebook\",\n            url: \"https://www.facebook.com/juanlopezaragon87/\",\n        },\n        {\n            icono: \"fab fa-twitter\",\n            url: \"https://twitter.com/juanlopezaragon\",\n        },\n        {\n            icono: \"fab fa-medium-m\",\n            url: \"https://medium.com/@lopez0089\",\n        },\n        {\n            icono: \"fab fa-pinterest\",\n            url: \"https://www.pinterest.com.mx/lopez089/desarrollos-juan-l%C3%B3pez/\",\n        },\n    ],\n};\n\nexport default StateFooter;\n","import * as Yup from \"yup\";\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(2, \"Escribe tu nombre\")\n        .max(25, \"Debe de tener menos de 25 caracteres\")\n        .required(\"Debe de introducir tu nombre\"),\n    Username: Yup.string()\n        .min(2, \"Escribe tu Username\")\n        .max(25, \"Debe de tener menos de 25 caracteres\")\n        .required(\"Debe de introducir tu username\"),\n    Email: Yup.string()\n        .email(\"El correo electrónico debe ser válido\")\n        .required(\"Debe de introducir tu email\"),\n    Password: Yup.string()\n        .min(8, \"Debe de tener al menos 8 caracteres\")\n        .max(15, \"Debe de tener menos de 15 caracteres\")\n        .required(\"Debe de introducir tu Password\"),\n    ConfirmPassword: Yup.string()\n        .required(\"repita su contraseña\")\n        .oneOf([Yup.ref(\"Password\")], \"Passwords must match\"),\n    termsOfService: Yup.boolean()\n        .oneOf([true], \"accept the Terms of use & Privacy Policy\")\n        .required(\"Tiene que acptar los terminos y condiciones\"),\n});\n\nexport default validationSchema;\n","import React from \"react\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport \"animate.css\";\nimport validationSchema from \"../service/validationForm\";\nimport \"bootstrap\";\n\nconst isValid = (touched, errors) => {\n    if (touched.name && errors.name) {\n        return \"is-invalid form-control animated headShake\";\n    }\n    if (!touched.name) {\n        return \"form-control\";\n    }\n    if (touched.name) {\n        return \"form-control is-valid shake\";\n    }\n};\n\nconst Form = () => {\n    return (\n        <div className=\"card p-5  shadow-lg my-5\">\n            <p className=\"h3 text-info text-center \"> REGISTER</p>\n            <p className=\"text-center\">\n                <small className=\"text-muted  pt-1\">IT´S COMPLETELY FREE</small>\n            </p>\n            <Formik\n                initialValues={{\n                    name: \"\",\n                    Username: \"\",\n                    Email: \"\",\n                    Password: \"\",\n                    ConfirmPassword: \"\",\n                    termsOfService: false,\n                }}\n                validationSchema={validationSchema}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                    alert(JSON.stringify(values));\n                    resetForm();\n                    setSubmitting(false);\n                }}\n            >\n                {({ errors, handleSubmit, isSubmitting, touched }) => (\n                    <div className=\" mt-4 d-flex align-items-center justify-content-center\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <Field\n                                    id=\"name\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\" Your full name\"\n                                    className={isValid(touched, errors)}\n                                />\n                                <ErrorMessage name=\"name\">\n                                    {(msg) => <div className=\"invalid-feedback d-flex\">{msg}</div>}\n                                </ErrorMessage>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Username\">Username</label>\n                                <Field\n                                    id=\"Username\"\n                                    type=\"text\"\n                                    name=\"Username\"\n                                    placeholder=\"Username\"\n                                    className={isValid(touched, errors)}\n                                />\n                                <ErrorMessage name=\"Username\">\n                                    {(msg) => <div className=\"invalid-feedback d-flex\">{msg}</div>}\n                                </ErrorMessage>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Field\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"Email\"\n                                    placeholder=\"Email adress\"\n                                    className={isValid(touched, errors)}\n                                />\n                                <ErrorMessage name=\"Email\">\n                                    {(msg) => <div className=\"invalid-feedback d-flex\">{msg}</div>}\n                                </ErrorMessage>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Field\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"Password\"\n                                    placeholder=\"••••••••\"\n                                    className={isValid(touched, errors)}\n                                />\n                                <ErrorMessage name=\"Password\">\n                                    {(msg) => <div className=\"invalid-feedback d-flex\">{msg}</div>}\n                                </ErrorMessage>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"confirmPassword\">ConfirmPassword</label>\n                                <Field\n                                    id=\"confirmPassword\"\n                                    type=\"password\"\n                                    name=\"ConfirmPassword\"\n                                    placeholder=\"••••••••\"\n                                    className={isValid(touched, errors)}\n                                />\n                                <ErrorMessage name=\"ConfirmPassword\">\n                                    {(msg) => <div className=\"invalid-feedback d-flex\">{msg}</div>}\n                                </ErrorMessage>\n                            </div>\n                            <div>\n                                <Field\n                                    id=\"termsOfService\"\n                                    type=\"checkbox\"\n                                    name=\"termsOfService\"\n                                    class=\"form-check-input\"\n                                />\n                                <label htmlFor=\"termsOfService\" className=\"form-check-label\">\n                                    I accept the Terms of use & Privacy Policy\n                                </label>\n                                <ErrorMessage name=\"termsOfService\">\n                                    {(msg) => <div className=\"invalid-feedback d-flex\">{msg}</div>}\n                                </ErrorMessage>\n                            </div>\n                            <button\n                                className=\"btn btn-info btn-block mt-3\"\n                                type=\"submit\"\n                                disabled={!isSubmitting ? null : \"disabled\"}\n                            >\n                                CREATE ACCOUNT\n                            </button>\n                        </form>\n                    </div>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Footer = (props) => {\n    const { BgColor, Social } = props;\n    return (\n        <footer className={`${BgColor} mt-5  h-25`}>\n            <div className=\"h-100 d-flex flex-column justify-content-center\">\n                <p className=\"h5 text-center text-white\">Sígueme</p>\n                <div className=\"container d-flex justify-content-center\">\n                    {Social.map((s) => (\n                        <a href={s.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i className={`${s.icono} h4 text-white m-3`} />\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nFooter.propTypes = {\n    BgColor: PropTypes.string.isRequired,\n    Social: PropTypes.arrayOf.isRequired,\n};\n\nexport default Footer;\n","import React from \"react\";\nimport StateFooter from \"./components/footer/stateFooter\";\nimport Form from \"./components/form.jsx\";\nimport Footer from \"./components/footer/footer.jsx\";\n\nfunction App() {\n    return (\n        <>\n            <div className=\"d-flex align-items-center flex-column\">\n                <Form />\n            </div>\n            <Footer BgColor={StateFooter.BgColor} Social={StateFooter.Redes} />\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app.jsx\";\nimport \"animate.css\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    rootElement,\n);\n"],"sourceRoot":""}